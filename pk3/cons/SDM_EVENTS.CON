onevent EVENT_KILLIT
	ifactor FIREBALL
	{
		espawn ONFIRE
		getactor[THISACTOR].owner OWNER
		setactor[RETURN].owner OWNER
		setvar RETURN 0
		break
	}
	
	// Use a quick-access var here later.
	getactor[THISACTOR].picnum TEMP
	switch TEMP
		case BOTTLE1:
		case BOTTLE2:
		case BOTTLE3:
		case BOTTLE4:
		case BOTTLE5:
		case BOTTLE6:
		case BOTTLE7:
		case BOTTLE8:
		case BOTTLE10:
		case BOTTLE11:
		case BOTTLE12:
		case BOTTLE13:
		case BOTTLE14:
		case BOTTLE15:
		case BOTTLE16:
		case BOTTLE17:
		case BOTTLE18:
		case BOTTLE19:
		case FOODOBJECT1:
		case FOODOBJECT2:
		case FOODOBJECT3:
		case FOODOBJECT4:
		case FOODOBJECT5:
		case FOODOBJECT6:
		case FOODOBJECT7:
		case FOODOBJECT8:
		case FOODOBJECT9:
		case FOODOBJECT10:
		case FOODOBJECT11:
		case FOODOBJECT12:
		case FOODOBJECT13:
		case FOODOBJECT14:
		case FOODOBJECT15:
		case FOODOBJECT16:
		case FOODOBJECT17:
		case FOODOBJECT18:
		case FOODOBJECT19:
		case FOODOBJECT20:
		case JOLLYMEAL:
		case COFFEEMUG:
		case COFFEEMACHINE:
		case RUBBERCAN:
		case CANWITHSOMETHING:
		case CANWITHSOMETHING2:
		case CANWITHSOMETHING3:
		case CANWITHSOMETHING4:
		case EXPLODINGBARREL:
		case FIREBARREL:
		case FIREVASE:
		case DUKEBURGER:
		case GUNPOWDERBARREL:
		case ROBOTDOG:
		case ROBOTDOG2:
		case FEATHEREDCHICKEN:
		case SKINNEDCHICKEN:
		case DESKLAMP:
		case MAILBAG:
		case CLOCK:
		case VACUUM:
		case DOMELITE:
		case CAMERALIGHT:
		case MOVIECAMERA:
		case TRIPODCAMERA:
		case CHAIR3:
		case DURRPLANT:
		case BONG:
		case BONG2:
		case DILDO:
		case FLESHLIGHT:
			state prepare_respawn_hardcoded
			break
	endswitch
	
	ifactor SHELL
	{
		randvar RANDOM_SOUND 5
		switch RANDOM_SOUND
			case 0: sound CASING1 break
			case 1: sound CASING2 break
			case 2: sound CASING3 break
			case 3: sound CASING4 break
			case 4: sound CASING5 break
			case 5: sound CASING6 break
		endswitch
		break
	}
	else ifactor SHOTGUNSHELL
	{
		randvar RANDOM_SOUND 5
		switch RANDOM_SOUND
			case 0: sound SHELL_BOUNCE1 break
			case 1: sound SHELL_BOUNCE2 break
			case 2: sound SHELL_BOUNCE3 break
			case 3: sound SHELL_BOUNCE4 break
			case 4: sound SHELL_BOUNCE5 break
			case 5: sound SHELL_BOUNCE6 break
		endswitch
		break
	}
	
	ifactor OOZFILTER
	{
		ifvare NORESPAWN 1
		{
			setvar RETURN 0
		}
		else
		{
			state prepare_respawn_hardcoded
		}
	}
	else ifactor SEENINE
	{
		ifvare NORESPAWN 1
		{
			setvar RETURN 0
		}
		else
		{
			state prepare_respawn_hardcoded
		}
	}
	else ifactor 1249 // SEENINEDEAD+1
	{
		ifvare NORESPAWN 1
		{
			setvar RETURN 0
		}
		else
		{
			state prepare_respawn_hardcoded
		}
	}
	
endevent

onevent EVENT_EGS
	// TODO: Change this to quick-access vars once EDuke32 gets better MP.
	ifactor FIREBALL
	{
		// Calculate horizontal spread
		getactor[THISACTOR].ang TEMP
		addvar TEMP 8
		randvar TEMP2 16
		subvarvar TEMP TEMP2
		setactor[THISACTOR].ang TEMP
		
		// Calculate vertical spread
		getactor[THISACTOR].zvel TEMP
		addvar TEMP 128
		randvar TEMP2 256
		subvarvar TEMP TEMP2
		setactor[THISACTOR].zvel TEMP
	}
	else ifactor DEVASTATORMISSILE
	{
		// Calculate horizontal spread
		getactor[THISACTOR].ang TEMP
		addvar TEMP 16
		randvar TEMP2 32
		subvarvar TEMP TEMP2
		setactor[THISACTOR].ang TEMP
		
		// Calculate vertical spread
		getactor[THISACTOR].zvel TEMP
		addvar TEMP 256
		randvar TEMP2 512
		subvarvar TEMP TEMP2
		setactor[THISACTOR].zvel TEMP
		
		// Get angle and barrel
		getplayer[THISACTOR].hbomb_hold_delay TEMP3
		getplayer[THISACTOR].ang SPAWN_ORIGANG
		
		// Calculate X position
		setvarvar TEMP SPAWN_ORIGANG
		sin TEMP2 TEMP
		divvar TEMP2 512
		
		// Set X position
		getactor[THISACTOR].x TEMP
		ifvare TEMP3 1 // Check barrel
		{
			subvarvar TEMP TEMP2
		}
		else
		{
			addvarvar TEMP TEMP2
		}
		setactor[THISACTOR].x TEMP
		
		// Calculate Y position
		setvarvar TEMP SPAWN_ORIGANG
		addvar TEMP 1536
		sin TEMP2 TEMP
		divvar TEMP2 512
		
		// Set Y position
		getactor[THISACTOR].y TEMP
		ifvare TEMP3 1 // Check barrel
		{
			subvarvar TEMP TEMP2
		}
		else
		{
			addvarvar TEMP TEMP2
		}
		setactor[THISACTOR].y TEMP
		
		ifvare COOP GM_ROIDMATCH
		{
			setprojectile[DEVASTATORMISSILE].velmult 2
		}
	}
	
	getactor[THISACTOR].picnum TEMP
	switch TEMP
		case JIBS1:
		case JIBS2:
		case JIBS3:
		case JIBS4:
		case JIBS5:
		case JIBS6:
		case HEADJIB1:
        case LEGJIB1:
        case ARMJIB1:
        case LIZMANHEAD1:
        case LIZMANARM1:
        case LIZMANLEG1:
        case DUKELEG:
        case DUKEGUN:
        case DUKETORSO:
		case BLOODSPLAT1:
		case BLOODSPLAT2:
		case BLOODSPLAT3:
		case BLOODSPLAT4:
		case BLOODPOOL:
		case FOOTPRINTS:
		case FOOTPRINTS2:
		case FOOTPRINTS3:
		case FOOTPRINTS4:
		case PAPER:
		case MONEY:
		case MAIL:
		case PUKE:
			setactor[THISACTOR].mdflags 16
			setvar ISADULT ADULT_UNHIDE
			break
			
		case LASERLINE:
			setactor[THISACTOR].mdflags 16
			break
	endswitch
	switch TEMP
		case JIBS1:
		case JIBS2:
		case JIBS3:
		case JIBS4:
		case JIBS5:
		case HEADJIB1:
        case LEGJIB1:
        case ARMJIB1:
        case LIZMANHEAD1:
        case LIZMANARM1:
        case LIZMANLEG1:
        case DUKELEG:
        case DUKEGUN:
        case DUKETORSO:
			setvarvar PICNUM_MEMORY TEMP
			break
	endswitch
endevent

onevent EVENT_GAME
	ifactor TRIPBOMB
	{
		getactor[THISACTOR].cstat TEMP	
		ifvare TEMP 16
		{
			cstator 256
			setactor[THISACTOR].htflags 136
		}
	}
	
	ifactor PLASMABALL
	{
		addvar EXTRA_MEMORY 1
		ifvarg EXTRA_MEMORY 4
		{
			getactor[THISACTOR].x SPAWN_ORIGX
			getactor[THISACTOR].y SPAWN_ORIGY
			getactor[THISACTOR].z SPAWN_ORIGZ
			getactor[THISACTOR].ang SPAWN_ORIGANG
			getactor[THISACTOR].zvel SPAWN_ORIGZVEL
			getactor[THISACTOR].owner OWNER
			
			eshoot PLASMABALL2
			getactor[THISACTOR].ang TEMP
			addvar TEMP PLASMARIFLE_X_SPREAD
			setactor[RETURN].ang TEMP
			setactor[RETURN].x SPAWN_ORIGX
			setactor[RETURN].y SPAWN_ORIGY
			setactor[RETURN].z SPAWN_ORIGZ
			setactor[RETURN].zvel SPAWN_ORIGZVEL
			setactor[RETURN].owner OWNER
			setvar RETURN 0
			
			eshoot PLASMABALL2
			getactor[THISACTOR].ang TEMP
			subvar TEMP PLASMARIFLE_X_SPREAD
			setactor[RETURN].ang TEMP
			setactor[RETURN].x SPAWN_ORIGX
			setactor[RETURN].y SPAWN_ORIGY
			setactor[RETURN].z SPAWN_ORIGZ
			setactor[RETURN].zvel SPAWN_ORIGZVEL
			setactor[RETURN].owner OWNER
			setvar RETURN 0
			
			eshoot PLASMABALL2
			getactor[THISACTOR].zvel TEMP
			addvar TEMP PLASMARIFLE_Y_SPREAD
			setactor[RETURN].zvel TEMP
			setactor[RETURN].x SPAWN_ORIGX
			setactor[RETURN].y SPAWN_ORIGY
			setactor[RETURN].z SPAWN_ORIGZ
			setactor[RETURN].ang SPAWN_ORIGANG
			setactor[RETURN].owner OWNER
			setvar RETURN 0
			
			eshoot PLASMABALL2
			getactor[THISACTOR].zvel TEMP
			subvar TEMP PLASMARIFLE_Y_SPREAD
			setactor[RETURN].zvel TEMP
			setactor[RETURN].x SPAWN_ORIGX
			setactor[RETURN].y SPAWN_ORIGY
			setactor[RETURN].z SPAWN_ORIGZ
			setactor[RETURN].ang SPAWN_ORIGANG
			setactor[RETURN].owner OWNER
			setvar RETURN 0
			
			eshoot PLASMABALL2
			setactor[RETURN].x SPAWN_ORIGX
			setactor[RETURN].y SPAWN_ORIGY
			setactor[RETURN].z SPAWN_ORIGZ
			setactor[RETURN].ang SPAWN_ORIGANG
			setactor[RETURN].zvel SPAWN_ORIGZVEL
			setactor[RETURN].owner OWNER
			setvar RETURN 0
			
			
			killit
		}
	}
	
	getactor[THISACTOR].picnum TEMP	
	switch TEMP
		case JIBS1:
		case JIBS2:
		case JIBS3:
		case JIBS4:
		case JIBS5:
		case DUKETORSO:
		case DUKELEG:
			getactor[THISACTOR].pal TEMP2
			espawn GIBBLOOD
			setactor[RETURN].pal TEMP2
			break
	endswitch
	
	ifactor JIBS6
	{
		switch PICNUM_MEMORY
			case JIBS1:
			case JIBS2:
			case JIBS3:
			case JIBS4:
			case JIBS5:
			case HEADJIB1:
			case LEGJIB1:
			case ARMJIB1:
			case LIZMANHEAD1:
			case LIZMANARM1:
			case LIZMANLEG1:
			case DUKELEG:
			case DUKEGUN:
			case DUKETORSO:
				state gibsound
				
				getactor[THISACTOR].pal TEMP2
				ifvare PICNUM_MEMORY JIBS1 { espawn JIBS1_ONGROUND setactor[RETURN].pal TEMP2 }
				else ifvare PICNUM_MEMORY JIBS2 { espawn JIBS2_ONGROUND setactor[RETURN].pal TEMP2 }
				else ifvare PICNUM_MEMORY JIBS3 { espawn JIBS3_ONGROUND setactor[RETURN].pal TEMP2 }
				else ifvare PICNUM_MEMORY JIBS4 { espawn JIBS4_ONGROUND setactor[RETURN].pal TEMP2 }
				else ifvare PICNUM_MEMORY JIBS5 { espawn JIBS5_ONGROUND setactor[RETURN].pal TEMP2 }
				else ifvare PICNUM_MEMORY DUKETORSO { espawn DUKETORSO_ONGROUND setactor[RETURN].pal TEMP2 }
				else ifvare PICNUM_MEMORY DUKEGUN { espawn DUKEGUN_ONGROUND setactor[RETURN].pal TEMP2 }
				else ifvare PICNUM_MEMORY DUKELEG { espawn DUKELEG_ONGROUND setactor[RETURN].pal TEMP2 }
				
				setvar PICNUM_MEMORY 0
			break
		endswitch
	}
endevent

state set_norespawn
		ifactor SECTOREFFECTOR
		{
			setvarvar TEMP3 HITAG_MEMORY
		}
		else
		{
			setvarvar TEMP3 LOTAG_MEMORY
		}
				
		getactor[CURSPRITE].hitag TEMP2
		ifvarvare TEMP3 TEMP2
		{
			setactorvar[CURSPRITE].NORESPAWN 1
		}
ends

state explosive_search_iterator
	getactor[CURSPRITE].picnum TEMP
	ifvare TEMP SEENINE
	{
		state set_norespawn
	}
	else ifvare TEMP OOZFILTER
	{
		state set_norespawn
	}
		
	nextspritestat CURSPRITE LASTSPRITE
	setvarvar LASTSPRITE CURSPRITE
ends

state search_for_explosive
		headspritestat CURSPRITE 0
		setvarvar LASTSPRITE CURSPRITE
		whilevarn CURSPRITE -1
		{
			state explosive_search_iterator
		}
		
		headspritestat CURSPRITE 6
		setvarvar LASTSPRITE CURSPRITE
		whilevarn CURSPRITE -1
		{
			state explosive_search_iterator
		}
ends

onevent EVENT_LOADACTOR
	getactor[THISACTOR].hitag HITAG_MEMORY
	getactor[THISACTOR].lotag LOTAG_MEMORY
	
	getactor[THISACTOR].picnum TEMP
	switch TEMP
	case TIMEDPLATFORM:
	case CONTEXTSOUND:
	case CUSTOMTOUCHPLATE:
		setactor[THISACTOR].lotag 0
		break
	case STARTWEAPONCHANGER:
		setvarvar START_WEAPON LOTAG_MEMORY
		setactor[THISACTOR].lotag 0
		break
	endswitch
endevent

onevent EVENT_ENTERLEVEL
	setvar START_WEAPON -1
endevent

onevent EVENT_SPAWN
	ifactor MASTERSWITCH
	{
		state search_for_explosive
		break
	}
	else ifactor SECTOREFFECTOR
	{
		ifvarn LOTAG_MEMORY 13
		{
			break
		}
		state search_for_explosive
		break
	}
	
	ifactor WATERDRIP // Fix a common mistake with WATERDRIPs
	{
		getactor[THISACTOR].cstat TEMP
		ifvarand TEMP 1
		{
			subvar TEMP 1
			setactor[THISACTOR].cstat TEMP
		}
		break
	}
	
	getactor[THISACTOR].picnum PICNUM_MEMORY
	getactor[THISACTOR].xrepeat XREPEAT_MEMORY
	getactor[THISACTOR].yrepeat YREPEAT_MEMORY
	getactor[THISACTOR].clipdist CLIPDIST_MEMORY
	getactor[THISACTOR].extra EXTRA_MEMORY
	getactor[THISACTOR].cstat CSTAT_MEMORY
	getactor[THISACTOR].pal PAL_MEMORY
	getactor[THISACTOR].statnum STATNUM_MEMORY
	getactor[THISACTOR].sectnum SECTNUM_MEMORY
	getactor[THISACTOR].x SPAWN_ORIGX
	getactor[THISACTOR].y SPAWN_ORIGY
	getactor[THISACTOR].z SPAWN_ORIGZ
	getactor[THISACTOR].ang SPAWN_ORIGANG
	
	// Mark certain tiles for Adult Mode
	getactor[THISACTOR].picnum TEMP
	switch TEMP
		case FLESHLIGHT:
		case DILDO:
		case GEECKU:
		case GEECKU2:
		case SHARONM:
		case STRIKERXHELEN:
		case STRIKER:
		case SHARONM2:
		case MIKHAILA:
		case CHAMPAGNE:
		case MIKHAILA2:
		case DAWNSEXANIM:
		case SALLYMASTURBATE:
		case PUSSYGRIND:
		case HENTAIANIM:
		case LIRUANIM:
			setactor[THISACTOR].mdflags 16
			setvar ISADULT ADULT_HIDE
			break
			
		case XXXSTACY:
		case FEMPIC1:
		case FEMPIC2:
		case FEMPIC4:
		case FEM9:
			setactor[THISACTOR].mdflags 16
			setvar ISADULT ADULT_UNHIDE
			break
		
		case EXOTICA:
		case FEMPIC5:
		case FEMPIC6:
		case FEMPIC7:
		case FEMMAG1:
		case FEMMAG2:
		case STRIPPERFLASH:
		case HOOKERFLASH:
		case FEM1:
		case FEM3:
		case FEM4:
		case FEM5:
		case FEM6:
		case FEM7:
		case FEM10:
		case PIRATE1A:
		case PIRATE3A:
		case TOUGHGAL:
		case WOMAN:
		case 1330:
		case 4498:
		case 4865:
			setactor[THISACTOR].mdflags 16
			setvar ISADULT ADULT_SWAP
			break	
	endswitch
	
	switch COOP
		case GM_ROIDMATCH:
		case GM_INSTAGIB:
			state strip_items
			break
		default:
			break
	endswitch
endevent

onevent EVENT_ANIMATESPRITES // !UNSYNCHRONIZED!
	ifvarg ISADULT 0
	{
		getuserdef[].lockout CL_TEMP1
		ifvare CL_TEMP1 1
		{
			ifvare ISADULT ADULT_HIDE
			{
				settspr[THISACTOR].tsprxrepeat 0
			}
			else
			{
				getactor[THISACTOR].xrepeat CL_TEMP1
				settspr[THISACTOR].tsprxrepeat CL_TEMP1
				
				getactor[THISACTOR].yrepeat CL_TEMP1
				settspr[THISACTOR].tspryrepeat CL_TEMP1
				
				ifvare ISADULT ADULT_SWAP
				{
					gettspr[THISACTOR].tsprpicnum CL_TEMP1
					switch CL_TEMP1
						case EXOTICA: settspr[THISACTOR].tsprpicnum 5950 break
						case FEMPIC5: settspr[THISACTOR].tsprpicnum 5951 break
						case FEMPIC6: settspr[THISACTOR].tsprpicnum 5952 break
						case FEMPIC7: settspr[THISACTOR].tsprpicnum 5953 break
						case FEMMAG1: settspr[THISACTOR].tsprpicnum 5954 break
						case PIRATE1A: settspr[THISACTOR].tsprpicnum 5955 break
						case PIRATE3A: settspr[THISACTOR].tsprpicnum 5957 break
						case FEM10: settspr[THISACTOR].tsprpicnum 5959 break
						case 4865: settspr[THISACTOR].tsprpicnum 5960 break
						case 4866: settspr[THISACTOR].tsprpicnum 5961 break
						case 4867: settspr[THISACTOR].tsprpicnum 5962 break
						case 4868: settspr[THISACTOR].tsprpicnum 5963 break
						case 4869: settspr[THISACTOR].tsprpicnum 5964 break
						case 4870: settspr[THISACTOR].tsprpicnum 5965 break
						case WOMAN: settspr[THISACTOR].tsprpicnum 5966 break
						case FEMMAG2: settspr[THISACTOR].tsprpicnum 5969 break
						case 4498: settspr[THISACTOR].tsprpicnum 5970 break
						case FEM3: settspr[THISACTOR].tsprpicnum 5971 break
						case HOOKERFLASH: settspr[THISACTOR].tsprpicnum 5971 break
						case FEM5: settspr[THISACTOR].tsprpicnum 5973 break
						case FEM4: settspr[THISACTOR].tsprpicnum 5974 break
						case 1330: settspr[THISACTOR].tsprpicnum 5979 break
						case FEM7: settspr[THISACTOR].tsprpicnum 5980 break
						case 1332: settspr[THISACTOR].tsprpicnum 5984 break
						case 1333: settspr[THISACTOR].tsprpicnum 5985 break
						case FEM6: settspr[THISACTOR].tsprpicnum 5986 break
					endswitch
				}
			}
		}
	}
	
	ifactor LASERLINE
	{
		settspr[THISACTOR].tsprpicnum 5006
	}
endevent

onevent EVENT_CHEATGETBOOT
	setvar HAS_FREEZETHROWER 1
	setvar HAS_FLAMETHROWER 1
	setvar FLAMETHROWER_AMMO MAXFREEZEAMMO
	setvar FREEZETHROWER_AMMO MAXFLAMETHROWERAMMO
	
	setvar HAS_RIPPER 1
	setvar HAS_PLASMARIFLE 1
	setvar RIPPER_AMMO MAXCHAINGUNAMMO
	setvar PLASMARIFLE_AMMO MAXPLASMARIFLEAMMO
	
	setvar HAS_RPG 1
	setvar HAS_RAILGUN 1
	setvar RPG_AMMO MAXRPGAMMO
	setvar RAILGUN_AMMO MAXRAILGUNAMMO
	
	setvar HAS_SHOTGUN 1
	setvar HAS_SSG 1
endevent

onevent EVENT_RESETPLAYER
	setvar HAS_FREEZETHROWER 0
	setvar HAS_FLAMETHROWER 0
	setvar FLAMETHROWER_AMMO 0
	setvar FREEZETHROWER_AMMO 0
	state setfreezethrower
	
	setvar HAS_RIPPER 0
	setvar HAS_PLASMARIFLE 0
	setvar RIPPER_AMMO 0
	setvar PLASMARIFLE_AMMO 0
	state setripper

	setvar HAS_RPG 0
	setvar HAS_RAILGUN 0
	setvar RPG_AMMO 0
	setvar RAILGUN_AMMO 0	
	state setrpg
	
	setvar HAS_SHOTGUN 0
	setvar HAS_SSG 0
	state setshotgun
	
	ifvarg START_WEAPON -1
	{
		setplayer[THISACTOR].gotweapon PISTOL_WEAPON 0
		
		ifvarl START_WEAPON SSG_WEAPON
		{
			setplayer[THISACTOR].gotweapon START_WEAPON 1
			
			getplayer[THISACTOR].max_ammo_amount START_WEAPON TEMP
			divvar TEMP 2
			setplayer[THISACTOR].ammo_amount START_WEAPON TEMP
			
			ifvare START_WEAPON SHOTGUN_WEAPON
			{
				setvar HAS_SHOTGUN 1
			}
			else ifvare START_WEAPON RPG_WEAPON
			{
				setvar HAS_RPG 1
				setvarvar RPG_AMMO TEMP
			}
			else ifvare START_WEAPON CHAINGUN_WEAPON
			{
				setvar HAS_RIPPER 1
				setvarvar RIPPER_AMMO TEMP
			}
			else ifvare START_WEAPON FREEZE_WEAPON
			{
				setvar HAS_FREEZETHROWER 1
				setvarvar FREEZETHROWER_AMMO TEMP
			}
		
			setplayer[THISACTOR].curr_weapon START_WEAPON
		}
	}
endevent

onevent EVENT_STRAFELEFT
ifp pjetpack
{
	getplayer[THISACTOR].rotscrnang TEMP
	
	ifp prunning
		addvar TEMP 6
	else
		addvar TEMP 3
	
	ifvarg TEMP 45
	{
		setvar TEMP 45
	}
	setplayer[THISACTOR].rotscrnang TEMP 
}
endevent

onevent EVENT_STRAFERIGHT
ifp pjetpack
{
	getplayer[THISACTOR].rotscrnang TEMP
	
	ifp prunning
		subvar TEMP 6
	else
		subvar TEMP 3
		
	ifvarl TEMP -45
	{
		setvar TEMP -45
	}
	setplayer[THISACTOR].rotscrnang TEMP 
}
endevent

state jetpack_turn
	getplayer[THISACTOR].rotscrnang TEMP	
	getinput[THISACTOR].avel TEMP2
	mulvar TEMP2 -1
	divvar TEMP2 4
	addvarvar TEMP TEMP2
	
	ifvarl TEMP -45
	{
		setvar TEMP -45
	}
	else ifvarg TEMP 45
	{
		setvar TEMP 45
	}
	
	setplayer[THISACTOR].rotscrnang TEMP 
ends

onevent EVENT_TURNLEFT
	ifp pjetpack
	{
		state jetpack_turn
	}
	else ifinwater
	{
		state jetpack_turn
	}
endevent

onevent EVENT_TURNRIGHT
	ifp pjetpack
	{
		state jetpack_turn
	}
	else ifinwater
	{
		state jetpack_turn
	}
endevent

onevent EVENT_GETLOADTILE // !UNSYNCHRONIZED!
	ifvare COOP GM_ROIDMATCH
	{
		setvar RETURN ROIDLOAD
	}
endevent

onevent EVENT_USESTEROIDS
	getplayer[THISACTOR].steroids_amount TEMP
	ifvare TEMP 400
	{
		state roids_voices
	}
endevent

onevent EVENT_DISPLAYREST // !UNSYNCHRONIZED!

	//redefinequote 500 %d
	//qsprintf 500 500 gametype_flags
	//minitext 48 48 500 -127 1
	
	// Change orientation to 536 later.
	getplayer[THISACTOR].curr_weapon CL_TEMP1
	ifvare CL_TEMP1 FREEZE_WEAPON
	{
		ifvare USING_FLAMETHROWER 1
		{
			rotatesprite 254 180 32768 0 FLAMETHROWERAMMO_ICON -127 0 24 windowx1 windowy1 windowx2 windowy2
		}
	}
	else ifvare CL_TEMP1 CHAINGUN_WEAPON
	{
		ifvare USING_PLASMARIFLE 1
		{
			rotatesprite 254 180 32768 0 PLASMAAMMO_ICON -127 0 24 windowx1 windowy1 windowx2 windowy2
		}
	}
	
	// SO MANY FUCKING TEMP VARS
	getuserdef[].screen_size CL_TEMP1
	ifmultiplayer
	ifvarg CL_TEMP1 0
	ifvarn COOP GM_COOPERATIVE
	{
		setvar SCORE_COUNTER 0
		setvar SCORE_PLAYERINDEX 0
		setvar SCORE_YOFFSET 8
		whilevarvarn SCORE_COUNTER MULTIMODE
		{
			getplayer[SCORE_PLAYERINDEX].connected SCORE_PLAYERCONNECTED
			ifvare SCORE_PLAYERCONNECTED 1 // Is connected
			{
				// Print Background Bar
				myos 267 SCORE_YOFFSET NAMEBAR -127 569
				
				// Get palette
				getplayer[SCORE_PLAYERINDEX].palookup SCORE_PLAYERPAL
				
				// Get and print name
				getpname 500 SCORE_PLAYERINDEX
				screentext 3072 268 SCORE_YOFFSET 65536 0 0 500 -127 SCORE_PLAYERPAL 536 0 3 5 1 1 8192 0 0 xdim ydim 
				
				// Get and print frags
				getplayer[SCORE_PLAYERINDEX].frag SCORE_FRAGS
				getplayer[SCORE_PLAYERINDEX].fraggedself SCORE_SUICIDES
				subvarvar SCORE_FRAGS SCORE_SUICIDES
				redefinequote 500 %d
				qsprintf 500 500 SCORE_FRAGS
				screentext 3072 318 SCORE_YOFFSET 65536 0 0 500 -127 SCORE_PLAYERPAL 536 0 3 5 1 1 8193 0 0 xdim ydim 
				
				// Move y offset down
				addvar SCORE_YOFFSET 6
				addvar SCORE_COUNTER 1
			}
			
			// Move on to the next player
			addvar SCORE_PLAYERINDEX 1
		}
	}
endevent

onevent EVENT_DISPLAYMENUREST // Version display. !UNSYNCHRONIZED!
	screentext 3072 316 180 65536 0 0 499 -127 6 536 0 3 5 1 1 8193 0 0 xdim ydim 
endevent

/*
onevent EVENT_SOUND
	ifvare RETURN SOMETHING_DRIPPING
	{
		randvar RANDOM_SOUND 2
		switch RANDOM_SOUND
			case 0: setvar RETURN NEW_DRIP1 break
			case 1: setvar RETURN NEW_DRIP2 break
			case 2: setvar RETURN NEW_DRIP3 break
		endswitch
	}
endevent
*/