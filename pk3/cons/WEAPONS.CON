
// Note: This file has been directly converted from the EDuke32
// C source code to CON code, without any fixes or improvements.
// Further changes to player.c may or may not be reflected here.

/*
gamevar currentweapon 0 0 //  (system) (pointer)
gamevar gs 0 0 //  (system) (pointer)
gamevar looking_arc 0 0 //  (system) (pointer)
gamevar gun_pos 0 0 //  (system) (pointer)
gamevar weapon_xoffset 0 0 //  (system) (pointer)
gamevar weaponcount 0 0 //  (system) (pointer)
gamevar looking_angSR1 0 0 //  (system) (pointer)

gamevar xdim 0 0 //  (system) (pointer) (read only)
gamevar ydim 0 0 //  (system) (pointer) (read only)
gamevar windowx1 0 0 //  (system) (pointer) (read only)
gamevar windowx2 0 0 //  (system) (pointer) (read only)
gamevar windowy1 0 0 //  (system) (pointer) (read only)
gamevar windowy2 0 0 //  (system) (pointer) (read only)
*/

gamevar OLDMP_TEMP 0 1

gamevar hud_tilenum 0 1
gamevar hud_x 0 1
gamevar hud_y 0 1
gamevar hud_scale 65536 1
gamevar hud_angle 0 1
gamevar hud_shade 0 1
gamevar hud_pal 0 1
gamevar hud_orientation 0 1

gamevar hud_fistsign 0 1
gamevar hud_totaltime 0 1

gamevar hud_shadef 0 1
gamevar hud_shadef_crystal 0 1
gamevar hud_palf 0 1

// It is unfortunate that we need so many temporary gamevars.
gamevar hud_temp 0 1
gamevar hud_temp2 0 1
gamevar hud_temp3 0 1
gamevar hud_temp4 0 1

/*
// The following temporary gamevars are named differently because they are used
// in G_Draw[...] which would overwrite their values if used elsewhere.
*/
gamevar hud_G_Draw_temp 0 1
gamevar hud_G_Draw_temp2 0 1

gamevar weapon_pos 0 1
gamevar weaponscale 0 1
gamevar playerid 0 1

// define ROTATESPRITE_MAX 2048

// preliminary functions

state G_DrawTile
    getplayer[THISACTOR].cursectnum hud_G_Draw_temp2
    ifvarg hud_G_Draw_temp2 -1
        getsector[hud_G_Draw_temp2].floorpal hud_G_Draw_temp2
    else
        setvar hud_G_Draw_temp2 0

    ifvarand hud_orientation 4
        addvar hud_angle 1024
        
    ifvarand hud_orientation 2 nullop else
        addvar hud_orientation 2
                 
    rotatesprite hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_G_Draw_temp2 hud_orientation windowx1 windowy1 windowx2 windowy2
        
    ifvarand hud_orientation 2 nullop else
        subvar hud_orientation 2
    
    ifvarand hud_orientation 4
        subvar hud_angle 1024
ends

state G_DrawTilePal
    ifvarand hud_orientation 4
        addvar hud_angle 1024
        
    ifvarand hud_orientation 2 nullop else
        addvar hud_orientation 2

    rotatesprite hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_pal hud_orientation windowx1 windowy1 windowx2 windowy2
        
    ifvarand hud_orientation 2 nullop else
        subvar hud_orientation 2
    
    ifvarand hud_orientation 4
        subvar hud_angle 1024
ends

state G_DrawTileScaled
    setvar hud_G_Draw_temp 192 // xoff

    switch currentweapon
        case DEVISTATOR_WEAPON
        case TRIPBOMB_WEAPON
            setvar hud_G_Draw_temp 160
            break
        default
            ifvarand hud_orientation 262144
            {
                setvar hud_G_Draw_temp 160
                subvar hud_orientation 262144
            }
            break
    endswitch

    ifvarand hud_orientation 4
        addvar hud_angle 1024
        
    /*
    ifvarg rendermode 2
        ifvarn usemodels 0
            ifhasmodel hud_tilenum hud_pal
            {
                setvar hud_G_Draw_temp2 224
                mulvarvar hud_G_Draw_temp2 weaponscale
                divvar hud_G_Draw_temp2 100
                
                addvar hud_y 224
                subvarvar hud_y hud_G_Draw_temp2
            }
    */
    
    mulvarvar hud_x weaponscale
    divvar hud_x 100
    setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
    mulvarvar hud_G_Draw_temp2 weaponscale
    divvar hud_G_Draw_temp2 100
    subvarvar hud_G_Draw_temp hud_G_Draw_temp2
    addvarvar hud_x hud_G_Draw_temp
    
    mulvarvar hud_y weaponscale
    divvar hud_y 100
    setvar hud_G_Draw_temp 200
    setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
    mulvarvar hud_G_Draw_temp2 weaponscale
    divvar hud_G_Draw_temp2 100
    subvarvar hud_G_Draw_temp hud_G_Draw_temp2
    addvarvar hud_y hud_G_Draw_temp
    
    // setvar hud_scale 65536 // do this elsewhere; leave it open for modification
    mulvarvar hud_scale weaponscale
    divvar hud_scale 100
    
    ifvarand hud_orientation 2 nullop else
        addvar hud_orientation 2
    
    rotatesprite hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_pal hud_orientation windowx1 windowy1 windowx2 windowy2
        
    ifvarand hud_orientation 2 nullop else
        subvar hud_orientation 2
    
    ifvarand hud_orientation 4
        subvar hud_angle 1024
ends

state G_DrawWeaponTile
    // basic fading between player weapon shades
    ifvarvarn hud_shade hud_shadef
    {
        setvar hud_G_Draw_temp 0
        ifvare hud_pal 0 setvar hud_G_Draw_temp 1
        ifvarvare hud_pal hud_palf setvar hud_G_Draw_temp 1
        ifvare hud_G_Draw_temp 1
        {
            setvarvar hud_G_Draw_temp hud_shade
            subvarvar hud_G_Draw_temp hud_shadef
            setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
            shiftvarr hud_G_Draw_temp 2
            addvarvar hud_shadef hud_G_Draw_temp
            
            ifvare hud_G_Draw_temp 0
            {
                shiftvarr hud_G_Draw_temp2 1
                addvarvar hud_shadef hud_G_Draw_temp2
                ifvare hud_G_Draw_temp2 0
                    setvarvar hud_shadef hud_shade
            }
        }
    }
    else
        setvarvar hud_shadef hud_shade
        
    setvarvar hud_palf hud_pal
    setvarvar hud_shade hud_shadef
    
    state G_DrawTileScaled
ends

state G_DrawWeaponTile_crystal
    // basic fading between player weapon shades
    ifvarvarn hud_shade hud_shadef_crystal
    {
        setvarvar hud_G_Draw_temp hud_shade
        subvarvar hud_G_Draw_temp hud_shadef_crystal
        setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
        shiftvarr hud_G_Draw_temp 2
        addvarvar hud_shadef_crystal hud_G_Draw_temp
        
        ifvare hud_G_Draw_temp 0
        {
            shiftvarr hud_G_Draw_temp2 1
            addvarvar hud_shadef_crystal hud_G_Draw_temp2
            ifvare hud_G_Draw_temp2 0
                setvarvar hud_shadef_crystal hud_shade
        }
    }
    else
        setvarvar hud_shadef_crystal hud_shade
        
    setvarvar hud_shade hud_shadef_crystal
    
    state G_DrawTileScaled
ends

// helper states

state reset_hud_weapon_x_coordinate
    setvarvar hud_x weapon_xoffset
    subvarvar hud_x looking_angSR1
ends
state reset_hud_weapon_y_coordinate
    setvarvar hud_y looking_arc
    subvarvar hud_y gun_pos
ends
state reset_hud_weapon_coordinates
    state reset_hud_weapon_x_coordinate
    state reset_hud_weapon_y_coordinate
ends

state determine_animation
    getuserdef[THISACTOR].pause_on hud_temp
    ifvarn hud_temp 0
        setvar hud_temp 1
	
	getplayer[THISACTOR].gm OLDMP_TEMP
    ifvarand OLDMP_TEMP 1 // MODE_MENU
        orvar hud_temp 1

    getactor[playerid].pal hud_G_Draw_temp
    ifvare hud_G_Draw_temp 1
        orvar hud_temp 1
ends

// other EVENT_DISPLAYWEAPON code

include cons/weapons/misc.con
include cons/weapons/mightyboot.con
include cons/weapons/pistol.con
include cons/weapons/shotgun.con
include cons/weapons/chaingun.con
include cons/weapons/rpg.con
include cons/weapons/pipebomb.con
include cons/weapons/shrinker.con
include cons/weapons/expander.con
include cons/weapons/devastator.con
include cons/weapons/tripbomb.con
include cons/weapons/freezethrower.con
include cons/weapons/flamethrower.con
include cons/weapons/plasmarifle.con

// framework

state checkflamethrower
	ifvare HAS_FLAMETHROWER 1
	{
		ifvare USING_FLAMETHROWER 0
		{
			state setflamethrower
		}
		else ifvare HAS_FREEZETHROWER 1
		{
			state setfreezethrower
		}
	}
ends

onevent EVENT_WEAPKEY10
	ifvare WEAPON FREEZE_WEAPON
	{
		state checkflamethrower
		
		ifvare USING_FLAMETHROWER 1
		{
			setplayer[THISACTOR].ammo_amount FREEZE_WEAPON FLAMETHROWER_AMMO
		}
		else
		{
			setplayer[THISACTOR].ammo_amount FREEZE_WEAPON FREEZETHROWER_AMMO
		}
	}
endevent

state checkplasmarifle
	ifvare HAS_PLASMARIFLE 1
	{
		ifvare USING_PLASMARIFLE 0
		{
			state setplasmarifle
		}
		else ifvare HAS_RIPPER 1
		{
			state setripper
		}
	}
ends

onevent EVENT_WEAPKEY4
	ifvare WEAPON CHAINGUN_WEAPON
	{
		state checkplasmarifle
		
		ifvare USING_PLASMARIFLE 1
		{
			setplayer[THISACTOR].ammo_amount CHAINGUN_WEAPON PLASMARIFLE_AMMO
		}
		else
		{
			setplayer[THISACTOR].ammo_amount CHAINGUN_WEAPON RIPPER_AMMO
		}
	}
endevent

onevent EVENT_DOFIRE
	ifvare WEAPON FREEZE_WEAPON
	{
		ifvare USING_FLAMETHROWER 1
		{
			ifinwater
			{
				setvar RETURN 1
				break
			}
			
			ifvarl FLAMETHROWER_AMMO 1
			{
				setvar RETURN 1
				break
			}
			
			getplayervar[THISACTOR].FLAMETHROWER_AMMO AMMO_TEMP1
			subvar AMMO_TEMP1 1
			
			ifvarl AMMO_TEMP1 0
			{
				setvar AMMO_TEMP1 0
			}
			
			setplayervar[THISACTOR].FLAMETHROWER_AMMO AMMO_TEMP1
		}
		else
		{
			ifvarl FREEZETHROWER_AMMO 1
			{
				setvar RETURN 1
				break
			}
			
			getplayervar[THISACTOR].FREEZETHROWER_AMMO AMMO_TEMP1
			subvar AMMO_TEMP1 1
			
			ifvarl AMMO_TEMP1 0
			{
				setvar AMMO_TEMP1 0
			}
			
			setplayervar[THISACTOR].FREEZETHROWER_AMMO AMMO_TEMP1
		}
	}
	else ifvare WEAPON DEVISTATOR_WEAPON
	{
		getplayer[THISACTOR].hbomb_hold_delay TEMP
		ifvare TEMP 1
		{
			sound DEVASTATOR_FIRERIGHT
		}
		else
		{
			sound DEVASTATOR_FIRELEFT
		}
	}
	else ifvare WEAPON CHAINGUN_WEAPON
	{
		ifvare USING_PLASMARIFLE 1
		{
			ifvarl PLASMARIFLE_AMMO 1
			{
				setvar RETURN 1
				break
			}
			
			getplayervar[THISACTOR].PLASMARIFLE_AMMO AMMO_TEMP1
			subvar AMMO_TEMP1 1
			
			ifvarl AMMO_TEMP1 0
			{
				setvar AMMO_TEMP1 0
			}
			
			setplayervar[THISACTOR].PLASMARIFLE_AMMO AMMO_TEMP1
		}
		else
		{
			ifvarl RIPPER_AMMO 1
			{
				setvar RETURN 1
				break
			}
			
			getplayervar[THISACTOR].RIPPER_AMMO AMMO_TEMP1
			subvar AMMO_TEMP1 1
			
			ifvarl AMMO_TEMP1 0
			{
				setvar AMMO_TEMP1 0
			}
			
			setplayervar[THISACTOR].RIPPER_AMMO AMMO_TEMP1
		}
	}
endevent

onevent EVENT_FIRE
	ifvare WEAPON FREEZE_WEAPON
	{
		ifvare USING_FLAMETHROWER 1
		{
			ifinwater
			{
				setvar RETURN 1
				break
			}
		}
	}
endevent

onevent EVENT_DISPLAYWEAPON // P_DisplayWeapon

    setvar RETURN -1
    
    getplayer[THISACTOR].weapon_pos weapon_pos
    getuserdef[THISACTOR].weaponscale weaponscale
    getplayer[THISACTOR].i playerid

    getuserdef[THISACTOR].drawweapon hud_temp
    
    ifvare hud_temp 2 // weapon icons
    {
        setvar hud_tilenum -1
        
        switch currentweapon
            case PISTOL_WEAPON
                setvar hud_tilenum FIRSTGUNSPRITE
                break
            case CHAINGUN_WEAPON
                setvar hud_tilenum CHAINGUNSPRITE
                break
            case RPG_WEAPON
                setvar hud_tilenum RPGSPRITE
                break
            case FREEZE_WEAPON
				ifvare USING_FLAMETHROWER 1
				{
					setvar hud_tilenum FLAMETHROWERSPRITE
				}
				else
				{
					setvar hud_tilenum FREEZESPRITE
				}
                break
            case SHRINKER_WEAPON
                setvar hud_tilenum SHRINKERSPRITE
                break
            case GROW_WEAPON
                setvar hud_tilenum GROWSPRITEICON
                break
            case DEVISTATOR_WEAPON
                setvar hud_tilenum DEVISTATORSPRITE
                break
            case TRIPBOMB_WEAPON
                setvar hud_tilenum TRIPBOMBSPRITE
                break
            case HANDREMOTE_WEAPON
            case HANDBOMB_WEAPON
                setvar hud_tilenum HEAVYHBOMB
                break
            case SHOTGUN_WEAPON
                setvar hud_tilenum SHOTGUNSPRITE
                break
            default
                addlogvar currentweapon
                break
                /*
            case KNEE_WEAPON
                setvar hud_tilenum -1
                break
                */
        endswitch
        
        ifvarn hud_tilenum -1
            {
            setvar hud_x 160
            setvarvar hud_y weapon_pos
            mulvarvar hud_y weapon_pos
            addvar hud_y 180
            setvar hud_scale 65536
            getuserdef[THISACTOR].statusbarscale hud_temp2
            mulvarvar hud_scale hud_temp2
            divvar hud_scale 100
            rotatesprite hud_x hud_y hud_scale 0 hud_tilenum 0 0 2 windowx1 windowy1 windowx2 windowy2
            }
    }
    
    ifvarn hud_temp 1 break // If we are not displaying the actual HUD weapons, stop processing.
    
    // these gamevars can get changed in the states up above, so reset them now.
    setvar hud_scale 65536
    setvar hud_orientation 0
    setvar hud_angle 0
    setvarvar hud_shade gs
    
    state draw_quick_kick
        
    // cleanup
    setvar hud_orientation 0
    setvar hud_angle 0
    guniqhudid 0
    
    getactor[playerid].xrepeat hud_temp
    ifvarl hud_temp 40
        state draw_shrunk_fists
    else
    {
        getactor[playerid].pal hud_pal
        ifvarn hud_pal 1
        {
            getplayer[THISACTOR].cursectnum hud_temp2
            ifvarg hud_temp2 -1
                getsector[hud_temp2].floorpal hud_pal
            else
                setvar hud_pal 0
        }
        
        switch currentweapon
            case KNEE_WEAPON
				setvarvar hud_totaltime WEAPON0_TOTALTIME
				state draw_kick
                break
            case TRIPBOMB_WEAPON
                setvarvar hud_totaltime WEAPON8_TOTALTIME
                state draw_tripbomb
                break
            case RPG_WEAPON
                setvarvar hud_totaltime WEAPON4_TOTALTIME
                state draw_rpg
                break
            case SHOTGUN_WEAPON
                setvarvar hud_totaltime WEAPON2_TOTALTIME
                state draw_shotgun
                break
            case CHAINGUN_WEAPON
                setvarvar hud_temp4 WEAPON3_FIREDELAY
                setvarvar hud_totaltime WEAPON3_TOTALTIME
				ifvare USING_PLASMARIFLE 1
				{
					state draw_plasmarifle
				}
				else
				{
					state draw_chaingun
				}
                break
            case PISTOL_WEAPON
                setvarvar hud_temp3 WEAPON1_RELOAD
                setvarvar hud_temp4 WEAPON1_FIREDELAY
                setvarvar hud_totaltime WEAPON1_TOTALTIME
                state draw_pistol
                break
            case HANDBOMB_WEAPON
                setvarvar hud_totaltime WEAPON5_TOTALTIME
                state draw_pipebomb
                break
            case HANDREMOTE_WEAPON
                setvarvar hud_totaltime WEAPON10_TOTALTIME
                state draw_detonator
                break
            case DEVISTATOR_WEAPON
                setvarvar hud_totaltime WEAPON7_TOTALTIME
                state draw_devastator
                break
            case FREEZE_WEAPON
				setvarvar hud_totaltime WEAPON9_TOTALTIME
				ifvare USING_FLAMETHROWER 1
				{
					state draw_flamethrower
				}
				else
				{
					state draw_freezer
				}
                break
            case GROW_WEAPON
                setvarvar hud_totaltime WEAPON11_TOTALTIME
                state draw_expander
                break
            case SHRINKER_WEAPON
                setvarvar hud_totaltime WEAPON6_TOTALTIME
                state draw_shrinker
                break
            default
                addlogvar currentweapon
                break
        endswitch
        
        // cleanup
        setvar hud_orientation 0
        setvar hud_angle 0
        guniqhudid 0
    }
endevent
