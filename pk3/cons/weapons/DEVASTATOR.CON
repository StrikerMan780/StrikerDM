state draw_devastator // DEVISTATOR_WEAPON:
	state reset_hud_weapon_coordinates
	
	setvar hud_tilenum DEVISTATOR
	
	setvar hud_temp -1 // flag, -1 if not firing. > 0 otherwise.
	
/*
	// [SM] Make devastator match player color
	
	getactor[playerid].pal hud_pal
	ifvarn hud_pal 1
	{
		getplayer[THISACTOR].cursectnum hud_temp2
		ifvarg hud_temp2 -1
			getsector[hud_temp2].floorpal hud_pal
		ifvare hud_pal 0
			getplayer[THISACTOR].palookup hud_pal
	}
*/
	
	ifvarg weaponcount 0
	{
		addvar hud_totaltime 1
		ifvarvarl weaponcount hud_totaltime
		{
			setvar hud_temp 0
			
			// Handle Y offsets
			switch weaponcount
				default
					addlogvar weaponcount // debug
					break
					/*
				case 0
				case 6
					setvar hud_temp 0
					break
					*/
				case 1
				case 5
					setvar hud_temp 4
					break
				case 2
				case 4
					setvar hud_temp 12
					break
				case 3
					setvar hud_temp 24
					break
			endswitch
			
			// Handle Animation Frames
			switch weaponcount
				case 2
				case 5
					setvar hud_temp3 2
					break
				case 3
					setvar hud_temp3 3
					break
				case 4
					setvar hud_temp3 1
					break
				default
					setvar hud_temp3 0
					break
			endswitch
			
			ifvarn player[].hbomb_hold_delay 0
			{
				// Right Firing
				guniqhudid W_DEVASTATOR_RIGHT
				
				setvarvar hud_temp2 hud_temp
				shiftvarr hud_temp2 1
				addvarvar hud_x hud_temp2
				addvar hud_x 268
				
				addvarvar hud_y hud_temp
				addvar hud_y 238
				
				addvarvar hud_tilenum hud_temp3
				
				setvar hud_shade -32
				
				orvar hud_orientation RS_FORCELERP
				
				state G_DrawWeaponTile
				// ----
				
				state reset_hud_weapon_coordinates
				setvar hud_tilenum DEVISTATOR
				setvarvar hud_shade gs
				
				guniqhudid W_DEVASTATOR_LEFT
				
				addvar hud_x 30
				addvar hud_y 240
				
				orvar hud_orientation RS_YFLIP
				
				state G_DrawWeaponTile
				
				ifvarand hud_orientation RS_YFLIP
					subvar hud_orientation RS_YFLIP
				
				guniqhudid 0
			}
			else
			{
				// Left Firing
				guniqhudid W_DEVASTATOR_LEFT
				
				addvar hud_x 30
				setvarvar hud_temp2 hud_temp
				shiftvarr hud_temp2 1
				subvarvar hud_x hud_temp2
				
				addvar hud_y 240
				addvarvar hud_y hud_temp
				
				addvarvar hud_tilenum hud_temp3
				
				setvar hud_shade -32
				
				orvar hud_orientation RS_YFLIP
				orvar hud_orientation RS_FORCELERP
				
				state G_DrawWeaponTile
				// ----
				
				state reset_hud_weapon_coordinates	
				setvar hud_tilenum DEVISTATOR
				setvarvar hud_shade gs
				
				ifvarand hud_orientation RS_YFLIP
					subvar hud_orientation RS_YFLIP
				
				guniqhudid W_DEVASTATOR_RIGHT
				
				addvar hud_x 268
				addvar hud_y 238
				
				state G_DrawWeaponTile
				
				guniqhudid 0
			}
		break
		}
	}
	
	// Idle Frames
	ifvare hud_temp -1
	{
		// Right
		guniqhudid W_DEVASTATOR_RIGHT
		
		addvar hud_x 268
		addvar hud_y 238
		
		state G_DrawWeaponTile
		// ----
		
		state reset_hud_weapon_coordinates
		guniqhudid W_DEVASTATOR_LEFT
		
		addvar hud_x 30     
		addvar hud_y 240
				
		orvar hud_orientation RS_YFLIP
			
		state G_DrawWeaponTile
		
		ifvarand hud_orientation RS_YFLIP
			subvar hud_orientation RS_YFLIP
		
		guniqhudid 0
	}
ends

actor DEVISTATORSPRITE
	state item_shared_code
	
	ifmove RESPAWN_ACTOR_FLAG
	{
		state respawnit
	}
	else ifp pshrunk
	{
	}
	else ifp palive ifpdistl RETRIEVEDISTANCE ifcount 6 ifcanseetarget
	{
		// Parameters
		setvar STATE_PARAM1 DEVISTATOR_WEAPON
		setvar STATE_PARAM2 WEAP_PRIMARY
		setvar STATE_PARAM3 1
		
		state check_have_weapon
		ifvare STATE_RETURN 1
			state checkweaponstay
		
		getplayervar[THISACTOR].DEVASTATOR_AMMO TEMP
		ifvarl TEMP MAXDEVISTATORAMMO // Ammo under max?
		{
			addvarvar TEMP DEVISTATORAMMOAMOUNT
			ifvarg TEMP MAXDEVISTATORAMMO // If over, cap it.
			{
				setvar TEMP MAXDEVISTATORAMMO
			}
			
			setplayervar[THISACTOR].DEVASTATOR_AMMO TEMP
		}
		else
		{
			ifvare STATE_RETURN 1 // Has weapon?
			{
				break // Has weapon, and full ammo. Stop here.
			}
		}
		
		state set_have_weapon
		state addweapon_nobreak
		quote 87
		ifspawnedby DEVISTATORSPRITE
		{
			state getweaponcode
		}
		else
		{
			state quikweaponget_custom
		}
	}
enda

actor DEVISTATORAMMO
	state item_shared_code
	
	ifmove RESPAWN_ACTOR_FLAG
	{
		state respawnit
	}
	else ifp pshrunk
	{
	}
	else ifp palive ifcount 6 ifpdistl RETRIEVEDISTANCE ifcanseetarget 
	{
		getplayervar[THISACTOR].DEVASTATOR_AMMO TEMP
		ifvarl TEMP MAXDEVISTATORAMMO
		{
			addvarvar TEMP DEVISTATORAMMOAMOUNT
			ifvarg TEMP MAXDEVISTATORAMMO
			{
				setvar TEMP MAXDEVISTATORAMMO
			}
			
			setplayervar[THISACTOR].DEVASTATOR_AMMO TEMP
			
			quote 14
			ifspawnedby DEVISTATORAMMO {
				state getcode
			}
			else {
				state quikget
			}
		}
	}
enda

spritenoshade DEVASTATORMISSILE
gamevar WEAPON7_SHOOTS DEVASTATORMISSILE 1
gamevar WEAPON7_INITIALSOUND 0 1
defineprojectile DEVASTATORMISSILE PROJ_WORKSLIKE 65538 //32770
defineprojectile DEVASTATORMISSILE PROJ_CSTAT 128
defineprojectile DEVASTATORMISSILE PROJ_VEL 680
defineprojectile DEVASTATORMISSILE PROJ_XREPEAT 8
defineprojectile DEVASTATORMISSILE PROJ_YREPEAT 8
defineprojectile DEVASTATORMISSILE PROJ_EXTRA DEVASTATOR_WEAPON_STRENGTH
defineprojectile DEVASTATORMISSILE PROJ_EXTRA_RAND 3
defineprojectile DEVASTATORMISSILE PROJ_HITRADIUS DEVASTATORBLASTRADIUS
defineprojectile DEVASTATORMISSILE PROJ_SHADE -127
defineprojectile DEVASTATORMISSILE PROJ_OFFSET 14354 // Centered, offset handled in EVENT_EGS
defineprojectile DEVASTATORMISSILE PROJ_ISOUND RPG_EXPLODE
defineprojectile DEVASTATORMISSILE PROJ_SPAWNS EXPLOSION2
defineprojectile DEVASTATORMISSILE PROJ_SXREPEAT 8
defineprojectile DEVASTATORMISSILE PROJ_SYREPEAT 8
defineprojectile DEVASTATORMISSILE PROJ_TRAIL SMALLSMOKE
defineprojectile DEVASTATORMISSILE PROJ_TXREPEAT 8
defineprojectile DEVASTATORMISSILE PROJ_TYREPEAT 8

action MISSILEANGLES 0 1 7 1 1 
actor DEVASTATORMISSILE 0 MISSILEANGLES enda