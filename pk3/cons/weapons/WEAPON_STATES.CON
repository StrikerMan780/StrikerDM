// define ROTATESPRITE_MAX 2048

// preliminary functions

state G_DrawTile
    getplayer[THISACTOR].cursectnum hud_G_Draw_temp2
    ifvarg hud_G_Draw_temp2 -1
        getsector[hud_G_Draw_temp2].floorpal hud_G_Draw_temp2
    else
        setvar hud_G_Draw_temp2 0

    ifvarand hud_orientation 4
        addvar hud_angle 1024
        
    ifvarand hud_orientation 2 nullop else
        addvar hud_orientation 2
                 
    rotatesprite hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_G_Draw_temp2 hud_orientation windowx1 windowy1 windowx2 windowy2
        
    ifvarand hud_orientation 2 nullop else
        subvar hud_orientation 2
    
    ifvarand hud_orientation 4
        subvar hud_angle 1024
ends

state G_DrawTilePal
    ifvarand hud_orientation 4
        addvar hud_angle 1024
        
    ifvarand hud_orientation 2 nullop else
        addvar hud_orientation 2

    rotatesprite hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_pal hud_orientation windowx1 windowy1 windowx2 windowy2
        
    ifvarand hud_orientation 2 nullop else
        subvar hud_orientation 2
    
    ifvarand hud_orientation 4
        subvar hud_angle 1024
ends

state G_DrawTileScaled
    setvar hud_G_Draw_temp 192 // xoff

    switch currentweapon
        case DEVISTATOR_WEAPON
        case TRIPBOMB_WEAPON
            setvar hud_G_Draw_temp 160
            break
        default
            ifvarand hud_orientation 262144
            {
                setvar hud_G_Draw_temp 160
                subvar hud_orientation 262144
            }
            break
    endswitch

    ifvarand hud_orientation 4
        addvar hud_angle 1024
        
    /*
    ifvarg rendermode 2
        ifvarn usemodels 0
            ifhasmodel hud_tilenum hud_pal
            {
                setvar hud_G_Draw_temp2 224
                mulvarvar hud_G_Draw_temp2 weaponscale
                divvar hud_G_Draw_temp2 100
                
                addvar hud_y 224
                subvarvar hud_y hud_G_Draw_temp2
            }
    */
    
    mulvarvar hud_x weaponscale
    divvar hud_x 100
    setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
    mulvarvar hud_G_Draw_temp2 weaponscale
    divvar hud_G_Draw_temp2 100
    subvarvar hud_G_Draw_temp hud_G_Draw_temp2
    addvarvar hud_x hud_G_Draw_temp
    
    mulvarvar hud_y weaponscale
    divvar hud_y 100
    setvar hud_G_Draw_temp 200
    setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
    mulvarvar hud_G_Draw_temp2 weaponscale
    divvar hud_G_Draw_temp2 100
    subvarvar hud_G_Draw_temp hud_G_Draw_temp2
    addvarvar hud_y hud_G_Draw_temp
    
    // setvar hud_scale 65536 // do this elsewhere; leave it open for modification
    mulvarvar hud_scale weaponscale
    divvar hud_scale 100
    
    ifvarand hud_orientation 2 nullop else
        addvar hud_orientation 2
    
    rotatesprite hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_pal hud_orientation windowx1 windowy1 windowx2 windowy2
        
    ifvarand hud_orientation 2 nullop else
        subvar hud_orientation 2
    
    ifvarand hud_orientation 4
        subvar hud_angle 1024
ends

state G_DrawWeaponTile
    // basic fading between player weapon shades
    ifvarvarn hud_shade hud_shadef
    {
        setvar hud_G_Draw_temp 0
        ifvare hud_pal 0 setvar hud_G_Draw_temp 1
        ifvarvare hud_pal hud_palf setvar hud_G_Draw_temp 1
        ifvare hud_G_Draw_temp 1
        {
            setvarvar hud_G_Draw_temp hud_shade
            subvarvar hud_G_Draw_temp hud_shadef
            setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
            shiftvarr hud_G_Draw_temp 2
            addvarvar hud_shadef hud_G_Draw_temp
            
            ifvare hud_G_Draw_temp 0
            {
                shiftvarr hud_G_Draw_temp2 1
                addvarvar hud_shadef hud_G_Draw_temp2
                ifvare hud_G_Draw_temp2 0
                    setvarvar hud_shadef hud_shade
            }
        }
    }
    else
        setvarvar hud_shadef hud_shade
        
    setvarvar hud_palf hud_pal
    setvarvar hud_shade hud_shadef
    
    state G_DrawTileScaled
ends

state G_DrawWeaponTile_crystal
    // basic fading between player weapon shades
    ifvarvarn hud_shade hud_shadef_crystal
    {
        setvarvar hud_G_Draw_temp hud_shade
        subvarvar hud_G_Draw_temp hud_shadef_crystal
        setvarvar hud_G_Draw_temp2 hud_G_Draw_temp
        shiftvarr hud_G_Draw_temp 2
        addvarvar hud_shadef_crystal hud_G_Draw_temp
        
        ifvare hud_G_Draw_temp 0
        {
            shiftvarr hud_G_Draw_temp2 1
            addvarvar hud_shadef_crystal hud_G_Draw_temp2
            ifvare hud_G_Draw_temp2 0
                setvarvar hud_shadef_crystal hud_shade
        }
    }
    else
        setvarvar hud_shadef_crystal hud_shade
        
    setvarvar hud_shade hud_shadef_crystal
    
    state G_DrawTileScaled
ends

// helper states

state reset_hud_weapon_x_coordinate
    setvarvar hud_x weapon_xoffset
    subvarvar hud_x looking_angSR1
ends
state reset_hud_weapon_y_coordinate
    setvarvar hud_y looking_arc
    subvarvar hud_y gun_pos
ends
state reset_hud_weapon_coordinates
    state reset_hud_weapon_x_coordinate
    state reset_hud_weapon_y_coordinate
ends

state determine_animation
    getuserdef[THISACTOR].pause_on hud_temp
    ifvarn hud_temp 0
        setvar hud_temp 1
	
	getplayer[THISACTOR].gm OLDMP_TEMP
    ifvarand OLDMP_TEMP 1 // MODE_MENU
        orvar hud_temp 1

    getactor[playerid].pal hud_G_Draw_temp
    ifvare hud_G_Draw_temp 1
        orvar hud_temp 1
ends

// Custom States

state setflamethrower
	setvar WEAPON9_SHOOTS FIREBALL
	setvar WEAPON9_TOTALTIME 4
	setvar WEAPON9_FIRESOUND 0
	setvar WEAPON9_INITIALSOUND FLAMETHROWER_START
	setplayervar[THISACTOR].USING_FLAMETHROWER 1
	setplayer[THISACTOR].ammo_amount FREEZE_WEAPON FLAMETHROWER_AMMO
ends

state setfreezethrower
	setvar WEAPON9_SHOOTS FREEZEBLAST
	setvar WEAPON9_TOTALTIME 5
	setvar WEAPON9_FIRESOUND FREEZETHROWER_FIRE
	setvar WEAPON9_INITIALSOUND FREEZETHROWER_FIRE
	setplayervar[THISACTOR].USING_FLAMETHROWER 0
	setplayer[THISACTOR].ammo_amount FREEZE_WEAPON FREEZETHROWER_AMMO
ends

state setripper
	setvar WEAPON3_FLAGS 73812
	setvar WEAPON3_SHOOTS CHAINGUN
	setvar WEAPON3_FIREDELAY 3
	setvar WEAPON3_TOTALTIME 12
	setvar WEAPON3_HOLDDELAY 3
	setvar WEAPON3_SPAWN SHELL
	setvar WEAPON3_SPAWNTIME 1
	setvar WEAPON3_FIRESOUND CHAINGUN_FIRE
	setvar WEAPON3_INITIALSOUND 0
	setvar WEAPON3_SHOTSPERBURST 0
	setplayervar[THISACTOR].USING_PLASMARIFLE 0
	setplayer[THISACTOR].ammo_amount CHAINGUN_WEAPON RIPPER_AMMO
ends

state setplasmarifle
	setvar WEAPON3_FLAGS 0
	setvar WEAPON3_SHOOTS PLASMABALL
	setvar WEAPON3_FIREDELAY 10
	setvar WEAPON3_TOTALTIME 16
	setvar WEAPON3_HOLDDELAY 0
	setvar WEAPON3_SPAWN 0
	setvar WEAPON3_SPAWNTIME 0
	setvar WEAPON3_FIRESOUND PLASMARIFLE_FIRE
	setvar WEAPON3_INITIALSOUND PLASMARIFLE_CHARGE
	setvar WEAPON3_SHOTSPERBURST 1
	setplayervar[THISACTOR].USING_PLASMARIFLE 1
	setplayer[THISACTOR].ammo_amount CHAINGUN_WEAPON PLASMARIFLE_AMMO
ends

state setrpg
	setvar WEAPON4_FLAGS 0
	setvar WEAPON4_SHOOTS RPG
	setvar WEAPON4_FIREDELAY 4
	setvar WEAPON4_TOTALTIME 20
	setvar WEAPON4_FIRESOUND 0
	setvar WEAPON4_INITIALSOUND 0
	setplayervar[THISACTOR].USING_RAILGUN 0
	setplayer[THISACTOR].ammo_amount RPG_WEAPON RPG_AMMO
ends

state setrailgun
	setvar WEAPON4_FLAGS 0
	setvar WEAPON4_SHOOTS RAILGUNSHOT
	setvar WEAPON4_FIREDELAY 2
	setvar WEAPON4_TOTALTIME 25
	setvar WEAPON4_FIRESOUND 0
	setvar WEAPON4_INITIALSOUND 0
	setplayervar[THISACTOR].USING_RAILGUN 1
	setplayer[THISACTOR].ammo_amount RPG_WEAPON RAILGUN_AMMO
ends

state setshotgun
	setvar WEAPON2_FLAGS 1024
	setvar WEAPON2_TOTALTIME 30
	setvar WEAPON2_SPAWNTIME 24
	setvar WEAPON2_SPAWN SHOTGUNSHELL
	setvar WEAPON2_SHOTSPERBURST 7
	setvar WEAPON2_FIRESOUND SHOTGUN_FIRE
	setvar WEAPON2_SOUND2SOUND SHOTGUN_COCK
	setvar WEAPON2_SOUND2TIME 15
	setvar WEAPON2_SELECTSOUND SHOTGUN_COCK
	setplayervar[THISACTOR].USING_SSG 0
ends

state setssg
	setvar WEAPON2_FLAGS 1024
	setvar WEAPON2_TOTALTIME 60
	setvar WEAPON2_SPAWNTIME 0
	setvar WEAPON2_SPAWN 0
	setvar WEAPON2_SHOTSPERBURST 14
	setvar WEAPON2_FIRESOUND SSG_FIRE
	setvar WEAPON2_SOUND2SOUND 0
	setvar WEAPON2_SOUND2TIME 0
	setvar WEAPON2_SELECTSOUND SSG_CLOSE
	setplayervar[THISACTOR].USING_SSG 1
ends

state checkflamethrower
	ifvarn WEAPON FREEZE_WEAPON
		break
		
	getplayer[THISACTOR].kickback_pic TEMP
	ifvarn TEMP 0
		break
		
	ifvare HAS_FLAMETHROWER 1
	{
		ifvare USING_FLAMETHROWER 0
		{
			state setflamethrower
		}
		else ifvare HAS_FREEZETHROWER 1
		{
			state setfreezethrower
		}
		
		setplayer[THISACTOR].weapon_pos -9
		soundvar WEAPON9_SELECTSOUND
	}
ends

state checkplasmarifle
	ifvarn WEAPON CHAINGUN_WEAPON
		break
		
	getplayer[THISACTOR].kickback_pic TEMP
	ifvarn TEMP 0
		break
		
	ifvare HAS_PLASMARIFLE 1
	{
		ifvare USING_PLASMARIFLE 0
		{
			state setplasmarifle
		}
		else ifvare HAS_RIPPER 1
		{
			state setripper
		}
		
		setplayer[THISACTOR].weapon_pos -9
		soundvar WEAPON3_SELECTSOUND
	}
ends

state checkrailgun
	ifvarn WEAPON RPG_WEAPON
		break
		
	getplayer[THISACTOR].kickback_pic TEMP
	ifvarn TEMP 0
		break
		
	ifvare HAS_RAILGUN 1
	{
		ifvare USING_RAILGUN 0
		{
			state setrailgun
		}
		else ifvare HAS_RPG 1
		{
			state setrpg
		}
		
		setplayer[THISACTOR].weapon_pos -9
		soundvar WEAPON4_SELECTSOUND
	}
ends

state checkssg
	ifvarn WEAPON SHOTGUN_WEAPON
		break
		
	getplayer[THISACTOR].kickback_pic TEMP
	ifvarn TEMP 0
		break
		
	ifvare HAS_SSG 1
	{
		ifvare USING_SSG 0
		{
			state setssg
		}
		else ifvare HAS_SHOTGUN 1
		{
			state setshotgun
		}
		
		setplayer[THISACTOR].weapon_pos -9
		soundvar WEAPON2_SELECTSOUND
	}
ends

state handle_recoil
	ifvarg RECOIL_AMOUNT 0
	ifvarg RECOIL_TIME 0
	{
		ifvare RECOIL_COUNTER 0
		{
			getplayer[THISACTOR].horiz TEMP3
			addvarvar TEMP3 RECOIL_AMOUNT
			setplayer[THISACTOR].horiz TEMP3
		}
		else ifvarg RECOIL_COUNTER 0
		{
			getplayer[THISACTOR].horiz TEMP3
			setvarvar TEMP2 RECOIL_AMOUNT
			divvarvar TEMP2 RECOIL_TIME
			subvarvar TEMP3 TEMP2
			setplayer[THISACTOR].horiz TEMP3
		}
		
		ifvarvare RECOIL_COUNTER RECOIL_TIME
		{
			setvar RECOIL_COUNTER 0
			setvar RECOIL_TIME 0
			setvar RECOIL_AMOUNT 0
			break
		}
		
		addvar RECOIL_COUNTER 1
	}
ends

state player_updateweapons
ifp palive
{
	getplayer[THISACTOR].curr_weapon TEMP
	ifvare TEMP FREEZE_WEAPON
	{
		ifvare USING_FLAMETHROWER 1
		{
			setplayer[THISACTOR].ammo_amount FREEZE_WEAPON FLAMETHROWER_AMMO
			
			// Flamethrower empty ammo check
			ifvare HAS_FREEZETHROWER 1
			ifvare FLAMETHROWER_AMMO 0
			ifvarg FREEZETHROWER_AMMO 0
			{
				setplayer[THISACTOR].weapon_pos -9
				state setfreezethrower
			}
		}
		else
		{
			setplayer[THISACTOR].ammo_amount FREEZE_WEAPON FREEZETHROWER_AMMO
			
			ifvare HAS_FREEZETHROWER 0
			ifvare HAS_FLAMETHROWER 1
			{
				state setflamethrower
			}
			
			// Freezethrower empty ammo check
			ifvare HAS_FLAMETHROWER 1
			ifvare FREEZETHROWER_AMMO 0
			ifvarg FLAMETHROWER_AMMO 0
			{
				setplayer[THISACTOR].weapon_pos -9
				state setflamethrower
			}
		}
	}
	else ifvare TEMP CHAINGUN_WEAPON
	{
		ifvare USING_PLASMARIFLE 1
		{
			setplayer[THISACTOR].ammo_amount CHAINGUN_WEAPON PLASMARIFLE_AMMO
			
			// Plasma rifle empty ammo check
			ifvare HAS_RIPPER 1
			ifvare PLASMARIFLE_AMMO 0
			ifvarg RIPPER_AMMO 0
			{
				setplayer[THISACTOR].weapon_pos -9
				state setripper
			}
		}
		else
		{
			setplayer[THISACTOR].ammo_amount CHAINGUN_WEAPON RIPPER_AMMO
			
			ifvare HAS_RIPPER 0
			ifvare HAS_PLASMARIFLE 1
			{
				state setplasmarifle
			}
			
			// Ripper empty ammo check
			ifvare HAS_PLASMARIFLE 1
			ifvare RIPPER_AMMO 0
			ifvarg PLASMARIFLE_AMMO 0
			{
				setplayer[THISACTOR].weapon_pos -9
				state setplasmarifle
			}
		}
	}
	else ifvare TEMP RPG_WEAPON
	{
		ifvare USING_RAILGUN 1
		{
			setplayer[THISACTOR].ammo_amount RPG_WEAPON RAILGUN_AMMO
			
			// Railgun empty ammo check
			ifvare HAS_RPG 1
			ifvare RAILGUN_AMMO 0
			ifvarg RPG_AMMO 0
			{
				setplayer[THISACTOR].weapon_pos -9
				state setrpg
			}
		}
		else
		{
			setplayer[THISACTOR].ammo_amount RPG_WEAPON RPG_AMMO
			
			ifvare HAS_RPG 0
			ifvare HAS_RAILGUN 1
			{
				state setrailgun
			}
			
			// RPG empty ammo check
			ifvare HAS_RAILGUN 1
			ifvare RPG_AMMO 0
			ifvarg RAILGUN_AMMO 0
			{
				setplayer[THISACTOR].weapon_pos -9
				state setrailgun
			}
		}
	}
	else ifvare TEMP SHOTGUN_WEAPON
	{
		ifvare USING_SSG 1
		{
			getplayer[THISACTOR].kickback_pic TEMP2
			ifvare TEMP2 20
			{
				sound SSG_OPEN
			}
			else ifvare TEMP2 39
			{
				sound SSG_LOAD
			}
			else ifvare TEMP2 52
			{
				sound SSG_CLOSE
			}
			
			getplayer[THISACTOR].ammo_amount SHOTGUN_WEAPON TEMP3
			// Switch if less than 2 shells.
			ifvare HAS_SHOTGUN 1
			ifvarl TEMP3 2
			{
				setplayer[THISACTOR].weapon_pos -9
				state setshotgun
			}
		}
		else
		{
			ifvare HAS_SHOTGUN 0
			ifvare HAS_SSG 1
			{
				state setssg
			}
			
			getplayer[THISACTOR].kickback_pic TEMP2
			ifvare TEMP2 17
			{
				randvar RANDOM_SOUND 3
				switch RANDOM_SOUND
					case 0: sound SHELL_EJECT1 break
					case 1: sound SHELL_EJECT2 break
					case 2: sound SHELL_EJECT3 break
					case 3: sound SHELL_EJECT4 break
				endswitch
				break
			}
		}
	}
	
	ifvare COOP GM_ROIDMATCH
	{
		setplayer[THISACTOR].jetpack_amount 1600
		setplayer[THISACTOR].steroids_amount 399
		setplayer[THISACTOR].falling_counter 0
		setplayer[THISACTOR].gotweapon DEVISTATOR_WEAPON 1
		setplayer[THISACTOR].ammo_amount DEVISTATOR_WEAPON MAXDEVISTATORAMMO
		setplayer[THISACTOR].curr_weapon DEVISTATOR_WEAPON
	}
	else ifvare COOP GM_INSTAGIB
	{
		ifvare USING_RAILGUN 0
		{
			state setrailgun
			setprojectile[RAILGUNSHOT].extra 400
		}
		
		setplayer[THISACTOR].gotweapon RPG_WEAPON 1
		setplayer[THISACTOR].curr_weapon RPG_WEAPON
		setplayervar[THISACTOR].RAILGUN_AMMO MAXRAILGUNAMMO
	}
}
ends

state player_tossweapon
	getplayer[THISACTOR].curr_weapon TEMP
	switch TEMP
		case PISTOL_WEAPON: spawn FIRSTGUNSPRITE break
		case SHOTGUN_WEAPON:
			getplayervar[THISACTOR].USING_SSG TEMP
			ifvare TEMP 1
				spawn SSGSPRITE
			else
				spawn SHOTGUNSPRITE
			break
		case CHAINGUN_WEAPON:
			getplayervar[THISACTOR].USING_PLASMARIFLE TEMP
			ifvare TEMP 1
				spawn PLASMASPRITE
			else
				spawn CHAINGUNSPRITE
			break
		case RPG_WEAPON: 
			getplayervar[THISACTOR].USING_RAILGUN TEMP
			ifvare TEMP 1
				spawn RAILGUNSPRITE
			else
				spawn RPGSPRITE
			break
		case HANDBOMB_WEAPON: spawn HBOMBAMMO break
		case SHRINKER_WEAPON: spawn SHRINKERSPRITE break
		case DEVISTATOR_WEAPON: spawn DEVISTATORSPRITE break
		case TRIPBOMB_WEAPON: spawn TRIPBOMBSPRITE break
		case FREEZE_WEAPON:
			getplayervar[THISACTOR].USING_FLAMETHROWER TEMP
			ifvare TEMP 1
				spawn FLAMETHROWERSPRITE
			else
				spawn FREEZESPRITE
			break
		case GROW_WEAPON: spawn GROWSPRITEICON break
	endswitch
ends

state checkweaponstay
	getactor[THISACTOR].picnum STATE_TEMP1
	getactor[THISACTOR].htpicnum STATE_TEMP2
	ifvarvare STATE_TEMP1 STATE_TEMP2
	ifmultiplayer
	ifvarand gametype_flags 2
	{
		return
	}
ends

// PARAM1 = Weapon
state addweapon_nobreak
	getplayer[THISACTOR].gotweapon STATE_PARAM1 STATE_TEMP1
	ifvare STATE_TEMP1 1
	{
		break
	}
	
	setplayer[THISACTOR].gotweapon STATE_PARAM1 1
	getplayer[THISACTOR].weaponswitch STATE_TEMP2
	ifvarand STATE_TEMP2 1
	{
		setplayer[THISACTOR].weapon_pos -9
		setplayer[THISACTOR].curr_weapon STATE_PARAM1
	}
ends

// PARAM1 = Ammo type, PARAM2 = Ammo amount
state addammo_nobreak
	getplayer[THISACTOR].ammo_amount STATE_PARAM1 STATE_TEMP1
	addvarvar STATE_TEMP1 STATE_PARAM2
	
	getplayer[THISACTOR].max_ammo_amount STATE_PARAM1 STATE_TEMP2
	ifvarvarg STATE_TEMP1 STATE_TEMP2
	{
		setplayer[THISACTOR].ammo_amount STATE_PARAM1 STATE_TEMP2
	}
	else
	{
		setplayer[THISACTOR].ammo_amount STATE_PARAM1 STATE_TEMP1
	}
ends