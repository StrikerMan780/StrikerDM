state draw_chaingun // CHAINGUN_WEAPON:
	// hud_temp4 = FIREDELAY
	state reset_hud_weapon_coordinates
	
	ifvarg weaponcount 0
	{
		setvarvar hud_temp weaponcount
		shiftvarl hud_temp 7
		sin hud_temp hud_temp
		shiftvarr hud_temp 12
		addvarvar hud_y hud_temp
		
		state determine_animation
		ifvarn hud_temp 1
		{
			displayrand hud_temp
			andvar hud_temp 3
			mulvar hud_temp -1
			addvar hud_temp 1
			addvarvar hud_x hud_temp
		}
	}
	
	// base
	addvar hud_x 168
	addvar hud_y 260
	
	setvar hud_tilenum CHAINGUN

	state G_DrawWeaponTile
	
	subvar hud_x 168
	subvar hud_y 260
	
	ifvare weaponcount 0
	{
		addvar hud_x 178
		addvar hud_y 233
		addvar hud_tilenum 1 // relative
			
		state G_DrawWeaponTile
	}
	else
	{
		state determine_animation

		ifvarvarg weaponcount hud_temp4
		ifvarvarl weaponcount hud_totaltime
		{
			// Left muzzleflash
			ifvarn hud_temp 1 // If not paused
			{
				displayrand hud_temp3
				andvar hud_temp3 7
			}
			else
				setvar hud_temp3 0

			addvar hud_x 136 // -4+140
			addvarvar hud_x hud_temp3

			setvarvar hud_temp2 weaponcount
			shiftvarr hud_temp2 1

			addvarvar hud_y hud_temp3
			subvarvar hud_y hud_temp2
			addvar hud_y 208
			
			switch weaponcount
				case 4
					setvar hud_tilenum 2541
					break
				case 5
					setvar hud_tilenum RIPPERFLASH_EXTRA1
					break
				case 6
					setvar hud_tilenum 2542
					break
				case 7
					setvar hud_tilenum RIPPERFLASH_EXTRA2
					break
				case 8
					setvar hud_tilenum 2543
					break
				case 9
					setvar hud_tilenum RIPPERFLASH_EXTRA3
					break
			endswitch

			state G_DrawWeaponTile

			// cleanup
			subvarvar hud_x hud_temp3
			subvarvar hud_y hud_temp3

			// Right muzzleflash
			ifvarn hud_temp 1
			{
				displayrand hud_temp3
				andvar hud_temp3 7
			}

			addvar hud_x 44 // relative
			addvarvar hud_x hud_temp3
			addvarvar hud_y hud_temp3

			state G_DrawWeaponTile

			// cleanup
			subvar hud_x 180 // -4+140 + 44
			subvar hud_y 208
			subvarvar hud_x hud_temp3
			subvarvar hud_y hud_temp3
			addvarvar hud_y hud_temp2
		}

		subvar hud_totaltime 4
		ifvarvarl weaponcount hud_totaltime
		{
			// Center muzzleflash
			ifvarn hud_temp 1 // If not paused
			{
				displayrand hud_temp3
				andvar hud_temp3 7
			}
			else
				setvar hud_temp3 0

			setvarvar hud_temp2 weaponcount
			shiftvarr hud_temp2 1

			addvarvar hud_x hud_temp3
			addvar hud_x 158 // -4+162

			addvarvar hud_y hud_temp3
			subvarvar hud_y hud_temp2
			addvar hud_y 208

			switch weaponcount
				case 1
				case 2
					setvar hud_tilenum 2541
					break
				case 3
					setvar hud_tilenum RIPPERFLASH_EXTRA1
					break
				case 4
					setvar hud_tilenum 2542
					break
				case 5
					setvar hud_tilenum RIPPERFLASH_EXTRA2
					break
				case 6
					setvar hud_tilenum 2543
					break
				case 7
					setvar hud_tilenum RIPPERFLASH_EXTRA3
					break
			endswitch

			state G_DrawWeaponTile

			// cleanup
			subvarvar hud_x hud_temp3
			subvar hud_x 158
			subvarvar hud_y hud_temp3
			addvarvar hud_y hud_temp2
			subvar hud_y 208

			// barrels (hot)
			addvar hud_x 178
			addvar hud_y 233
			
			switch weaponcount
				case 1
					setvar hud_tilenum 2537
					break
				case 2
					setvar hud_tilenum RIPPERBARREL_EXTRA1
					break
				case 3
					setvar hud_tilenum 2538
					break
				case 4
					setvar hud_tilenum RIPPERBARREL_EXTRA2
					break
				case 5
					setvar hud_tilenum 2539
					break
				case 6
					setvar hud_tilenum RIPPERBARREL_EXTRA3
					break
				case 7
					setvar hud_tilenum 2540
					break
			endswitch

/*			
			ifvarg hud_tilenum 2537
			ifvarl hud_tilenum 2541
			{
				redefinequote 500 ^08WeaponCount: %d / %d
				qsprintf 500 500 weaponcount hud_tilenum
				userquote 500
			}
*/

			state G_DrawWeaponTile
		}
		else
		{
			// barrels
			addvar hud_x 178
			addvar hud_y 233

			setvar hud_tilenum CHAINGUN
			addvar hud_tilenum 1

			state G_DrawWeaponTile
		}
	}
ends

actor CHAINGUNSPRITE
	state item_shared_code
	
	ifmove RESPAWN_ACTOR_FLAG
	{
		state respawnit
	}
	else ifp pshrunk
	{
	}
	else ifp palive ifpdistl RETRIEVEDISTANCE ifcount 6 ifcanseetarget
	{
		// Parameters
		setvar STATE_PARAM1 CHAINGUN_WEAPON
		setvar STATE_PARAM2 WEAP_PRIMARY
		setvar STATE_PARAM3 1
		
		state check_have_weapon
		ifvare STATE_RETURN 1
			state checkweaponstay
		
		getplayervar[THISACTOR].RIPPER_AMMO TEMP
		ifvarl TEMP MAXCHAINGUNAMMO // Ammo under max?
		{
			addvarvar TEMP CHAINGUNAMMOAMOUNT
			ifvarg TEMP MAXCHAINGUNAMMO // If over, cap it.
			{
				setvar TEMP MAXCHAINGUNAMMO
			}
			
			setplayervar[THISACTOR].RIPPER_AMMO TEMP
		}
		else
		{
			ifvare STATE_RETURN 1 // Has weapon?
			{
				break // Has weapon, and full ammo. Stop here.
			}
		}
		
		state set_have_weapon
		state addweapon_nobreak
		quote 54
		ifspawnedby CHAINGUNSPRITE
		{
			state getweaponcode
		}
		else
		{
			state quikweaponget_custom
		}
	}
enda

actor BATTERYAMMO
	state item_shared_code
	
	ifmove RESPAWN_ACTOR_FLAG
	{
		state respawnit
	}
	else ifp pshrunk
	{
	}
	else ifp palive ifcount 6 ifpdistl RETRIEVEDISTANCE ifcanseetarget 
	{
		getplayervar[THISACTOR].RIPPER_AMMO TEMP
		ifvarl TEMP MAXCHAINGUNAMMO
		{
			addvarvar TEMP CHAINGUNAMMOAMOUNT
			ifvarg TEMP MAXCHAINGUNAMMO
			{
				setvar TEMP MAXCHAINGUNAMMO
			}
			
			setplayervar[THISACTOR].RIPPER_AMMO TEMP
			
			quote 63
			ifspawnedby BATTERYAMMO {
				state getcode
			}
			else {
				state quikget
			}
		}
	}
enda