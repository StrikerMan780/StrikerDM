state draw_chaingun // CHAINGUN_WEAPON:
    // hud_temp4 = FIREDELAY
    state reset_hud_weapon_coordinates
    
    ifvarg weaponcount 0
    {
        setvarvar hud_temp weaponcount
        shiftvarl hud_temp 7
        sin hud_temp hud_temp
        shiftvarr hud_temp 12
        addvarvar hud_y hud_temp
        
        state determine_animation
        ifvarn hud_temp 1
        {
            displayrand hud_temp
            andvar hud_temp 3
            mulvar hud_temp -1
            addvar hud_temp 1
            addvarvar hud_x hud_temp
        }
    }
    
    // base
    addvar hud_x 168
    addvar hud_y 260
    
    setvar hud_tilenum CHAINGUN

    state G_DrawWeaponTile
    
    subvar hud_x 168
    subvar hud_y 260
    
    switch weaponcount
        case 0
            addvar hud_x 178
            addvar hud_y 233
            addvar hud_tilenum 1 // relative
            
            state G_DrawWeaponTile
            break
        default
            state determine_animation

            ifvarvarg weaponcount hud_temp4
                ifvarvarl weaponcount hud_totaltime
                {
                    // muzzleflash 1
                    ifvarn hud_temp 1
                    {
                        displayrand hud_temp3
                        andvar hud_temp3 7
                    }
                    else
                        setvar hud_temp3 0

                    addvar hud_x 136 // -4+140
                    addvarvar hud_x hud_temp3

                    setvarvar hud_temp2 weaponcount
                    shiftvarr hud_temp2 1

                    addvarvar hud_y hud_temp3
                    subvarvar hud_y hud_temp2
                    addvar hud_y 208

                    setvarvar hud_tilenum weaponcount
                    subvar hud_tilenum 4
                    divvar hud_tilenum 5
                    addvar hud_tilenum CHAINGUN
                    addvar hud_tilenum 5

                    state G_DrawWeaponTile

                    // cleanup
                    subvarvar hud_x hud_temp3
                    subvarvar hud_y hud_temp3

                    // muzzleflash 3
                    ifvarn hud_temp 1
                    {
                        displayrand hud_temp3
                        andvar hud_temp3 7
                    }

                    addvar hud_x 44 // relative
                    addvarvar hud_x hud_temp3
                    addvarvar hud_y hud_temp3

                    state G_DrawWeaponTile

                    // cleanup
                    subvar hud_x 180 // -4+140 + 44
                    subvar hud_y 208
                    subvarvar hud_x hud_temp3
                    subvarvar hud_y hud_temp3
                    addvarvar hud_y hud_temp2
                }

            subvar hud_totaltime 4
            ifvarvarl weaponcount hud_totaltime
            {
                // muzzleflash 2
                ifvarn hud_temp 1
                {
                    displayrand hud_temp3
                    andvar hud_temp3 7
                }
                else
                    setvar hud_temp3 0

                setvarvar hud_temp2 weaponcount
                shiftvarr hud_temp2 1

                addvarvar hud_x hud_temp3
                addvar hud_x 158 // -4+162

                addvarvar hud_y hud_temp3
                subvarvar hud_y hud_temp2
                addvar hud_y 208

                setvarvar hud_tilenum weaponcount
                subvar hud_tilenum 2
                divvar hud_tilenum 5
                addvar hud_tilenum CHAINGUN
                addvar hud_tilenum 5

                state G_DrawWeaponTile

                // cleanup
                subvarvar hud_x hud_temp3
                subvar hud_x 158
                subvarvar hud_y hud_temp3
                addvarvar hud_y hud_temp2
                subvar hud_y 208

                // barrels (hot)
                addvar hud_x 178

                addvar hud_y 233

                setvar hud_tilenum CHAINGUN
                addvar hud_tilenum 1
                addvarvar hud_tilenum hud_temp2

                state G_DrawWeaponTile
            }
            else
            {
                // barrels
                addvar hud_x 178

                addvar hud_y 233

                setvar hud_tilenum CHAINGUN
                addvar hud_tilenum 1

                state G_DrawWeaponTile
            }
            break
    endswitch
ends

actor CHAINGUNSPRITE
    fall
	state despawn_item_from_can
    ifmove RESPAWN_ACTOR_FLAG
	{
        state respawnit
	}
    else ifp pshrunk
	{
	}
    else ifp palive ifpdistl RETRIEVEDISTANCE ifcount 6 ifcanseetarget
    {
        ifgotweaponce 0
            break
		
		getplayervar[THISACTOR].RIPPER_AMMO TEMP
		getplayervar[THISACTOR].HAS_RIPPER TEMP2
		ifvarl TEMP MAXCHAINGUNAMMO // Ammo under max?
		{
			addvarvar TEMP CHAINGUNAMMOAMOUNT
			ifvarg TEMP MAXCHAINGUNAMMO // If over, cap it.
			{
				setvar TEMP MAXCHAINGUNAMMO
			}
			
			setplayervar[THISACTOR].RIPPER_AMMO TEMP
		}
		else
		{
			ifvare TEMP2 1 // Has weapon?
			{
				break // Has weapon, and full ammo. Stop here.
			}
		}
		
		setplayervar[THISACTOR].HAS_RIPPER 1 // Give it
		
        quote 54
        ifspawnedby CHAINGUNSPRITE
		{
            state getweaponcode
			addweapon CHAINGUN_WEAPON 0
		}
        else
		{
            state quikweaponget_custom
			addweapon CHAINGUN_WEAPON 0
			killit
		}
    }
enda

actor BATTERYAMMO
	fall
	state despawn_item_from_can
    ifmove RESPAWN_ACTOR_FLAG
	{
        state respawnit
    }
    else ifp pshrunk
	{
    }
    else ifp palive ifcount 6 ifpdistl RETRIEVEDISTANCE ifcanseetarget 
    {
		getplayervar[THISACTOR].RIPPER_AMMO TEMP
		ifvarl TEMP MAXCHAINGUNAMMO
		{
			addvarvar TEMP CHAINGUNAMMOAMOUNT
			ifvarg TEMP MAXCHAINGUNAMMO
			{
				setvar TEMP MAXCHAINGUNAMMO
			}
			
			setplayervar[THISACTOR].RIPPER_AMMO TEMP
			
			quote 63
			ifspawnedby BATTERYAMMO {
				state getcode
			}
			else {
				state quikget
			}
		}
    }
enda